# This file establishes the necessary resources on Azure to create a Demo Webserver using Ubuntu
# Authentication from file $HOME/.azure/credentials

- name: 02 - Create Ubuntu Server with Docker + Apps
  hosts: localhost
  connection: local
  vars:
    date: "{{ lookup('pipe', 'date +%Y%m%d') }}"
  vars_files:
    - ./config.yml

  tasks:
  
    - name: Starting Now ... THIS CAN TAKE SOME TIME (10-15 MIN) ... HAVE A COFFEE AND RELAX!
      debug: msg="Starting now @ {{ lookup('pipe', 'date "+%Y-%m-%d %H:%M:%S"') }}"

    - name: Create Server NIC {{ NODE_NAME }}-{{ STUDENT_ID }}-int-nic0 with Security Group {{ NODE_NAME }}-{{ STUDENT_ID }}-sg0
      azure_rm_networkinterface:
        location: "{{ DEFAULT_LOCATION }}"
        resource_group: "{{ RESOURCE_GROUP }}"
        security_group: "{{ NODE_NAME }}-{{ STUDENT_ID }}-sg0"
        name: "{{ NODE_NAME }}-{{ STUDENT_ID }}-int-nic0"
        virtual_network: "{{ VNET1 }}"
        subnet: "{{ VNET_SUBNET_EXT }}"
        ip_configurations:
          - name: ipconfig1
            private_ip_allocation_method: Static
            private_ip_address: "{{ NODE_ADDRESS }}"
            public_ip_address_name: "{{ NODE_NAME }}-{{ STUDENT_ID }}-int-pip0"

    - name: Create {{ NODE_NAME }}-{{ STUDENT_ID }} Virtual Machine
      azure_rm_virtualmachine:
        location: "{{ DEFAULT_LOCATION }}"
        resource_group: "{{ RESOURCE_GROUP }}"
        name: "{{ NODE_NAME }}-{{ STUDENT_ID }}"
        vm_size: Standard_B2ms
        storage_account: "sa{{ STUDENT_ID }}{{ date }}"
        storage_container: "{{ NODE_NAME }}{{ STUDENT_ID }}"
        storage_blob: "{{ NODE_NAME }}{{ STUDENT_ID }}.vhd"
        admin_username: "{{ NODE_USER }}"
        admin_password: "{{ NODE_PASSWORD }}"
        network_interfaces: "{{ NODE_NAME }}-{{ STUDENT_ID }}-int-nic0"
        #boot_diagnostics:
          #enabled: true
          #storage_account: "sa{{ STUDENT_ID }}{{ date }}"
        append_tags: True
        tags:
          OperatingSystem: "Ubuntu"
          OperatingSystemVersion: "18.04-LTS"
          Applications: "All"
        image:
          offer: UbuntuServer
          publisher: Canonical
          sku: 18.04-LTS
          version: latest

    - name: Run init script for docker and dependencies
      azure_rm_virtualmachineextension:
        location: "{{ DEFAULT_LOCATION }}"
        resource_group: "{{ RESOURCE_GROUP }}"
        name: server_onboarding
        virtual_machine_name: "{{ NODE_NAME }}-{{ STUDENT_ID }}"
        publisher: Microsoft.Azure.Extensions
        virtual_machine_extension_type: CustomScript
        type_handler_version: 2.0
        #settings: '{"commandToExecute": "sudo apt-get update ; sudo apt-get install -y docker docker-compose ; sudo docker run --name hackazon --restart unless-stopped -d -p 8080:80 -p 8443:443 ianwijaya/hackazon ; sudo docker run --name nginx01 --restart=unless-stopped -d -p 8081:80 nginx:latest; sudo docker run --name dvwa --restart unless-stopped -d -p 8082:80 vulnerables/web-dvwa; sudo docker run --name f5helloworld --restart unless-stopped -d -p 8083:8080 f5devcentral/f5-hello-world; sudo docker run --name juice-shop --restart=unless-stopped -d -p 8084:3000 bkimminich/juice-shop "}'
        settings: '{"fileUris": ["https://raw.githubusercontent.com/cavalen/aolab-azure/master/deploy-lab/config_server.sh"], "commandToExecute": "sh config_server.sh"}'
        auto_upgrade_minor_version: true

    - debug: msg="Finishing ... @ {{ lookup('pipe', 'date "+%Y-%m-%d %H:%M:%S"') }}"
