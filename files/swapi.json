openapi: 3.0.0
info:
  title: starwars-api.com
  version: 1.0.0-oas3
  description: Star Wars API
paths:
  /api/allegiances/:
    get:
      operationId: /api/allegiances/get
      description: Get all allegiance values
      responses:
        '200':
          description: An array of allegiances.
          content:
            '*/*':
              schema:
                type: array
                items:
                  format: ''
      security:
        - apikeyQuery: []
  /api/films/:
    get:
      operationId: /api/films/get
      description: Get all films.
      responses:
        '200':
          description: An array of films.
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/film'
      security:
        - apikeyQuery: []
  '/api/films/{id}/':
    get:
      operationId: '/api/films/{id}/get'
      parameters:
        - name: id
          in: path
          description: Id of the film.
          required: true
          schema:
            type: string
      description: Get a specific film by id.
      responses:
        '200':
          description: A film.
          content:
            '*/*':
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/film'
      security:
        - apikeyQuery: []
  /api/people/:
    get:
      operationId: /api/people/get
      description: Get all people.
      responses:
        '200':
          description: An array of people.
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/person'
      security:
        - apikeyQuery: []
  '/api/people/{id}/':
    get:
      operationId: '/api/people/{id}/get'
      parameters:
        - name: id
          in: path
          description: Id of the person.
          required: true
          schema:
            type: string
      description: Get a specific person by id.
      responses:
        '200':
          description: A person.
          content:
            '*/*':
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/person'
      security:
        - apikeyQuery: []
  /api/planets/:
    get:
      operationId: /api/planets/get
      description: Get all planets.
      responses:
        '200':
          description: An array of planets.
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/planet'
      security:
        - apikeyQuery: []
  '/api/planets/{id}/':
    get:
      operationId: '/api/planets/{id}/get'
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the planet.
          schema:
            type: string
      description: Get a specific planet by id.
      responses:
        '200':
          description: A planet.
          content:
            '*/*':
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/planet'
      security:
        - apikeyQuery: []
servers:
  - url: 'http://swapi.com/'
components:
  securitySchemes:
    apikeyQuery:
      type: apiKey
      name: code
      in: query
  schemas:
    person:
      type: object
      properties:
        id:
          type: number
          description: >-
            Unique identifier representing a specific person for a given
            character persona.
        name:
          type: string
          description: Display name of person.
        homeWorldId:
          type: integer
          description: Indetifier of the planet the person is from.
        allegiance:
          type: string
          description: Which side or team the person has an allegiance.
    planet:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier representing a specific planet.
        name:
          type: string
          description: Display name of planet.
    film:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier representing a specific film.
        name:
          type: string
          description: Display name of film.
